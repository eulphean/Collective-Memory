const char Book[] ={"4N549W5N697W3N392W2N143WP4N62W6N833W5N687W6N835W6N846W4N576W3N406W3N259W5N556W5N711W2N280W5N711W5N698W5N682W4N550W3N398W5N694W5N527W3N428W1N45W4N587W5N695W5N727W4N574W4N571W4N564W2N294W4N563W5N717W4N556W2N285W5N704W6N306WP4N61W3N392W6N817W3N437W2N288W5N689W3N392W6N846W3N413W4N580W3N413W5N700W4N588W6N841W5N710W4N559W4N555W5N707W7N632WP4N60W3N392W6N817W5N725W3N392W3N442W3N390W3N392W3N442W3N426W4N348W3N439W5N728W4N576W6N690W4N584W3N441W5N701W3N428W5N721W3N431W2N276W6N865W4N577W4N552W2N276W6N668W4N216W4N572W5N710W3N433W6N676W4N572W5N710W4N577W6N678W6N860W6N848W5N701W3N433W5N722W6N319WP4N59W3N392W6N817W5N725W4N554W3N392W4N563W3N430W4N374W4N552W6N647W5N700W7N621W4N552W4N411W5N700W4N186W4N552W4N383W5N700W5N322W4N552W5N527W5N700W6N477W4N552W5N516W5N700W6N487W5N737W4N584W3N260W4N389W4N567W4N556W6N677W5N699W4N556W3N433W3N429W4N217WP4N58W3N392W6N817W5N725W6N817W5N712W4N578W7N967W3N435W3N430W4N374W5N727W3N439W5N713W5N532W7N997W5N718W6N852W5N703W4N579W2N289W9N904WP4N57W3N392W6N817W5N725W4N554W3N392W4N563W3N430W4N374W4N552W4N555W7N975W7N971W5N707W6N839W5N684W6N671W5N717W4N584W3N450W4N583W3N409W3N243W5N703W3N449W2N288W3N429W6N478WP4N56W3N392W6N817W6N681W4N581W3N420W5N711W4N584W7N792W3N441W2N261W3N420W4N572W4N584W5N697W3N428W6N654W4N554W4N558W4N561W5N530W3N424W3N431W2N296W4N535W6N484WP4N55W3N392W6N817W6N681W3N426W3N423W5N727W4N574W2N290W6N847W4N565W4N579W4N395W4N572W6N859W3N415W4N560W5N705W4N387W3N419W3N423W5N727W2N295W3N423W5N513W7N970W3N435W3N405W7N970W3N435W6N494WP4N54W4N539W3N423W5N518W3N406W4N577W2N301W5N676W5N687W6N847W4N578W3N397W4N567W4N563W6N839W5N687W4N541W7N785W4N554W4N577W3N439W4N569W5N698W4N561W5N703W4N550W6N671W4N571W3N435W3N426W5N358WP4N53W3N397W3N423W4N562W3N406W4N577W3N439W3N424W4N597W3N390W5N538W4N544W4N563W6N668W5N714W4N563W5N538W4N578W4N563W6N866W4N553W3N423W5N707W5N696W3N397W4N216W4N374W5N686W2N286W4N561W4N565W3N441W4N368W4N572W8N952W3N424W2N296W2N278W4N551W5N675W2N280W6N669W4N597W3N442W5N726W7N975W5N691W4N572W6N860W5N686W4N579W4N569W2N278W3N424W5N734W6N340WP5N206W4N569W2N281W4N562W3N406W4N577W3N439W3N431W5N741W7N1003W6N822W5N713W4N557W6N867W4N533W3N431W3N436W5N510W7N949W3N430W5N707W5N686W4N560W6N867W5N698W6N815W2N281W4N583W5N532W7N996W3N435W1N45W3N442W4N568W6N888W3N422W4N568W3N422W5N733W5N172WP5N205W3N413W3N413W3N417W5N542W3N256W1N45W4N554W3N397W4N567W2N277W7N957W6N617W1N45W8N885W5N703W4N567W5N739W4N407W4N561W3N439W2N256W7N616WP5N204W3N419W5N705W5N708W6N515W2N256W3N413W3N400W3N419W4N574W4N561W6N515W3N415W3N419W5N703W4N561W4N561W6N515W4N553W3N419W7N1009W4N561W4N555W6N515W3N390W3N419W6N853W4N561W4N567W6N515W3N392W3N419W5N702W4N561W4N550W7N491WP5N203W3N442W3N392W6N817W6N681W3N426W3N423W5N727W5N530W4N539W3N423W5N518W3N397W3N423W5N518W4N569W2N281W5N518W3N404W5N684W3N417W3N400W4N561W4N555W4N550W4N567W3N227W3N392W8N587WP4N388W5N697W3N392W2N142WP4N62W5N676W5N687W6N847W5N534W3N397W4N567W4N563W6N839W4N410W8N761WP4N61W3N397W4N567W5N342W6N841W5N700W3N237W6N841W4N563W4N379W6N841W4N574W4N377W2N281W5N705W4N571W4N574W4N571W2N276W5N689W8N776WP4N60W3N397W4N567W5N342W2N100W6N659W2N89W6N618W2N114W2N276W5N689W8N776WP4N59W3N397W4N567W5N342W5N716W2N276W4N564W3N424W4N595W5N703W2N276W5N689W8N776WP4N58W3N260W6N847W5N534W5N510W5N533W5N503W5N497W6N847W3N408W3N439W3N398W2N283W5N697W3N431W5N705W6N481WP4N57W3N260W6N847W5N534W6N829W5N527W6N852W5N531W6N840W3N434W4N565W7N787W5N549W5N539W6N666W6N638W5N533W5N526W4N581W2N296W5N690W3N444W4N561W4N558W7N995W2N289W5N710W5N703W4N555W3N422W7N996W11N1010WP4N56W3N260W6N847W4N578W6N840W5N736W5N541W6N632W3N422W4N584W4N554W6N680W4N557W4N572W3N435W5N746W5N705W5N528W4N583W4N565W4N574W7N460WP4N55W4N567W4N537W6N847W2N114W2N275W4N569W5N717W2N275W3N70W2N113W2N275W4N569W5N717W2N275W3N69W6N845W6N677W5N708W6N851W5N541W6N632W5N708W2N283W5N728W3N431W5N701W4N576W4N384W5N708W2N283W5N701W4N576W3N420W5N381WP4N54W3N404W3N406W5N519W4N560W2N280W5N710W5N511W4N577W5N476W3N428W1N45W5N467W6N856W6N874W5N713W5N710W6N465WP4N53W4N568W6N801W4N554W5N729W5N698W5N716W5N680W8N974W4N547W5N699W3N420W5N695W5N729W5N698W8N912W4N585W4N558W2N286W3N416W7N996W4N558W7N966W2N283W3N426W5N721W6N666W2N280W7N996W2N283W3N426W5N721W6N666W2N114W5N721W4N399W3N261W5N721W4N399W3N260W5N721W5N353W4N577W3N422W7N966W2N296W3N420W4N527W7N1020W8N1097W5N516W2N286W6N838W5N729W6N891W3N420W5N739W4N385W3N423W4N369W3N420W4N369W4N385W3N428W4N369W2N275W4N581W3N420W4N581W4N384W4N580W2N275W5N729W3N420W5N729W6N668W3N424W3N422W2N296W3N424W8N920W3N428W4N554W7N996W3N411W3N426W6N838W6N789W2N275W2N283W4N409W3N420W3N417W3N428W4N576W4N385W3N444W3N420W2N294W4N389W5N676W4N578W2N114W2N275W4N569W5N717W2N275W3N70W2N113W2N275W4N569W5N717W2N275W2N113W9N1051W5N707W4N515W2N296W4N564W5N690W2N114W2N275W2N113W3N420W3N417W2N113W7N630W3N261W2N275W4N394W3N420W3N417W2N114W7N625W3N437W3N416W5N702W4N569W4N394W2N275W4N569W1N45W3N420W3N417W4N569W7N630W5N717W2N275W4N394W1N45W3N420W3N417W2N114W7N803W3N428W4N554W2N296W2N294W9N898WP"};
int bookSize = 4832; //  Calculate the total characters we are using. 

// Hard Drive Pins
// Every hard drive has 2 pins
int hdA[] = {46, 50, 38, 42, 30, 10, 12, 9, 26, 22, 25, 31, 45, 53, 49, 41, 35}; 
int hdB[] = {48, 52, 40, 44, 32, 11, 13, 8, 27, 23, 24, 33, 43, 51, 47, 39, 37};
int hdSize = 17; // This should be the same as sizeof(hdB)
int curHdIdx; 

// Delay between 2 super states of the hard drive. 
int delayTick = 200; 
int delaySubTick = 100;
int delayWord = 50; 
int delayParagraph = 100;
int delayPitch = 500; 
int numMovesFactor = 2; 
int numPitchFactor = 10; 

String val = ""; 
int moves; 
int pitch; 

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600); 
  // Initialise hdA, hdB pins
  for (int i = 0; i < hdSize; i++) {
    pinMode(hdA[i], OUTPUT); 
    pinMode(hdB[i], OUTPUT); 
  }
}

void loop() {
  // put your main code here, to run repeatedly:
  for (int i = 0; i < bookSize; i++) { 
     char a = Book[i];
     if (a == 'N') { // Number of moves
      moves = val.toInt();
      Serial.print("Moves: "); Serial.print(moves); Serial.print(", "); 
      val = ""; // Reset string.
     } else if (a == 'W') { // Pitch
      pitch = val.toInt(); 
      
      Serial.print("Pitch: "); Serial.print(pitch); Serial.print(", "); 
      
      // Pick a random hard drive. 
      noTone(hdA[curHdIdx]);
      curHdIdx = getNewHD();

      Serial.println("Executing Word");
      
      // Execute hard drive. 
      executeHD(curHdIdx, moves, pitch); 

      // Wait before going to the next word. 
      delay(delayWord);
      
      // Reset string
      val = "";
     } else if (a == 'P') { // Pause and start the operation
      val = ""; // Reset string. 
      Serial.println("New Paragraph");

      // Wait before going to the next paragraph. 
      delay(delayParagraph);
     } else {
      val += a; 
     }
  }

  Serial.println("Done executing");
}

int getNewHD() {
   int newIdx = random(hdSize);
   while (newIdx == curHdIdx || newIdx == 1) {
      // Calculate new hard drive index. 
      newIdx = random(hdSize); 
   }

   return newIdx; 
}

void executeHD(int hdIdx, int moves, int pitch) {
   int r = random(1, 10); 

   if (r < 7) {
    // Play the tone
    tone(hdA[hdIdx], pitch*numPitchFactor);
    delay(delayPitch); // Just a little extra delay when producing a tone (This is along with the delayWord that happens)
   } else {
     Serial.print("Running HD: "); Serial.println(hdIdx + 1); 
     // Tick the hard drive. 
     for (int i = 0; i < moves * numMovesFactor; i++) {
        moveHD(hdIdx, i); 
     }
   }
}

// This contains the logic to tick the Hard Drive. 
void moveHD(int idx, int charIdx) {
  // Calculate a multiplying factor based on probability
  int p = random(1, 10); 
  int factor; 

  int cIdx = charIdx + 1; 
  
  if (p < 2) {
     factor = p * 2 * cIdx;
  } else if (p >= 2 && p < 4) {
     factor = p * 4 * cIdx; 
  } else if (p >= 4 && p < 6) {
     factor = p * 6 * cIdx; 
  } else if (p >= 6 && p < 8) {
     factor = p * 8 * cIdx; 
  } else if (p >= 8 && p < 10) {
     factor = p * 10 * cIdx;
  }
  
  factor = factor/100; 

  // LOW
  digitalWrite(hdA[idx], HIGH); 
  delay(delaySubTick); 
  digitalWrite(hdA[idx], LOW); 

  delay(delayTick * factor);

  // HIGH
  digitalWrite(hdB[idx], HIGH);
  delay(delaySubTick); 
  digitalWrite(hdB[idx], LOW); 

  delay(delayTick * factor);
}
